# -*- coding: utf-8 -*-
"""cv_image_classifier_apparels

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U8xGlzsfm56-GArKeEum9vUqokzaGFo6
"""

!pip install PyDrive

import os
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials

auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

# https://drive.google.com/open?id=1AS6H-49crNFwcUnL219HT2qA4M3m3f4U

download = drive.CreateFile({'id': '1AS6H-49crNFwcUnL219HT2qA4M3m3f4U'})

download.GetContentFile('train_LbELtWX.zip')
!unzip train_LbELtWX.zip

import keras
from keras.models import Sequential
from keras.layers import Dense, Dropout, Flatten
from keras.layers import Conv2D, MaxPooling2D
from keras.utils import to_categorical
from keras.preprocessing import image
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from keras.utils import to_categorical
from tqdm import tqdm

train = pd.read_csv('train.csv')

train_image = []
for i in tqdm(range(train.shape[0])):
    img = image.load_img('train/'+train['id'][i].astype('str')+'.png', target_size=(28,28,1), grayscale=True)
    img = image.img_to_array(img)
    img = img/255
    train_image.append(img)
X = np.array(train_image)

y=train['label'].values
y = to_categorical(y)

y

train

X

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, test_size=0.2)

model = Sequential()
model.add(Conv2D(32, kernel_size=(3, 3),activation='relu',input_shape=(28,28,1)))
model.add(Conv2D(64, (3, 3), activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.25))
model.add(Flatten())
model.add(Dense(128, activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(10, activation='softmax'))

model.compile(loss='categorical_crossentropy',optimizer='Adam',metrics=['accuracy'])

model.fit(X_train, y_train, epochs=10, validation_data=(X_test, y_test))

download = drive.CreateFile({'id': '1APs__ojScr4oVDzj60SBDzGCVtPDQYFc'})
download.GetContentFile('test_ScVgIM0.zip')
!unzip test_ScVgIM0.zip

# https://drive.google.com/open?id=1APs__ojScr4oVDzj60SBDzGCVtPDQYFc

test = pd.read_csv('test.csv')

test_image = []
for i in tqdm(range(test.shape[0])):
    img = image.load_img('test/'+test['id'][i].astype('str')+'.png', target_size=(28,28,1), grayscale=True)
    img = image.img_to_array(img)
    img = img/255
    test_image.append(img)
test = np.array(test_image)

prediction = model.predict_classes(test)

# https://drive.google.com/open?id=1WbTy9hUeySwchMovMtTSaxlcgsreS9RV

download = drive.CreateFile({'id': '1WbTy9hUeySwchMovMtTSaxlcgsreS9RV'})
download.GetContentFile('sample_submission_I5njJSF.csv')

sample = pd.read_csv('sample_submission_I5njJSF.csv')
sample['label'] = prediction
sample.to_csv('apparel_cnn_classifier.csv', header=True, index=False)

pwd

